// <auto-generated />
using System;
using APIGateway.IdempotencyDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace APIGateway.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.HttpDataEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdempotencyKeyId")
                        .HasColumnType("uuid");

                    b.Property<string>("RequestBody")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RequestHeaders")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResponseBody")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ResponseCode")
                        .HasColumnType("integer");

                    b.Property<string>("ResponseHeaders")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdempotencyKeyId")
                        .IsUnique();

                    b.ToTable("httpDataEntities");
                });

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.IdempotencyKeyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("HttpExchanceDataID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdempotencyKey")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LockedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("idempotencyKeyEntities");
                });

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.HttpDataEntity", b =>
                {
                    b.HasOne("APIGateway.IdempotencyDb.Entities.IdempotencyKeyEntity", "IdempotencyKey")
                        .WithOne("HttpDataEntity")
                        .HasForeignKey("APIGateway.IdempotencyDb.Entities.HttpDataEntity", "IdempotencyKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdempotencyKey");
                });

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.IdempotencyKeyEntity", b =>
                {
                    b.Navigation("HttpDataEntity")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
