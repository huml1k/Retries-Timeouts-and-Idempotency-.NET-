// <auto-generated />
using System;
using APIGateway.IdempotencyDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace APIGateway.Migrations
{
    [DbContext(typeof(IdempotencyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.FinancialProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("character varying(34)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreditDueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("UnpaidCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("financialProfiles");
                });

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.HttpDataEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdempotencyKeyId")
                        .HasColumnType("uuid");

                    b.Property<string>("RequestBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("RequestHeaders")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestMethod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("RequestPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ResponseBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponseCode")
                        .HasColumnType("integer");

                    b.Property<string>("ResponseHeaders")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("httpDataEntities");
                });

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.IdempotencyKeyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("HttpExchanceDataID")
                        .HasColumnType("uuid");

                    b.Property<string>("IdempotencyKey")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<DateTime?>("LockedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HttpExchanceDataID")
                        .IsUnique();

                    b.HasIndex("IdempotencyKey")
                        .IsUnique()
                        .HasDatabaseName("IX_IdempotencyKey_Key");

                    b.ToTable("idempotencyKeyEntities");
                });

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FinancialProfileId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("userEntities");
                });

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.FinancialProfile", b =>
                {
                    b.HasOne("APIGateway.IdempotencyDb.Entities.UserEntity", "User")
                        .WithOne("FinancialProfile")
                        .HasForeignKey("APIGateway.IdempotencyDb.Entities.FinancialProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.IdempotencyKeyEntity", b =>
                {
                    b.HasOne("APIGateway.IdempotencyDb.Entities.HttpDataEntity", "HttpDataEntity")
                        .WithOne("IdempotencyKey")
                        .HasForeignKey("APIGateway.IdempotencyDb.Entities.IdempotencyKeyEntity", "HttpExchanceDataID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HttpDataEntity");
                });

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.HttpDataEntity", b =>
                {
                    b.Navigation("IdempotencyKey")
                        .IsRequired();
                });

            modelBuilder.Entity("APIGateway.IdempotencyDb.Entities.UserEntity", b =>
                {
                    b.Navigation("FinancialProfile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
